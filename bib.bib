Journals:

@string{JFP             =  "Journal of Functional Programming"}
@string{HOSC            =  "Higher-Order and Symbolic Computation"}
@string{SCP             =  "Science of Computer Programming"}
@string{SigplanNot      =  "SIGPLAN Notices"}
@string{TCS             =  "Theoretical Computer Science"}
@string{CompSurv        =  "ACM Computing Surveys"}
@string{JSC             =  "Journal of Symbolic Computation"}
@string{JACM            =  "Journal of the ACM"}
@string{CACM            =  "Communications of the ACM"}
@string{MSCS            =  "Mathematical Structures in Computer Science"}
@string{JCSS            =  "Journal of Computer and System Sciences"}
@string{TOSEM           =  "Transactions on Software Engineering and Methodology"}
@string{TOPLAS          =  "Transactions on Programming Languages and Systems"}
@string{IST             =  "Information and Software Technology"}
@string{VLDB            =  "Journal on Very Large Databases"}
@string{JOOP            =  "Journal of Object-Oriented Programming"}
@string{SPE             =  "Software -- Practice and Experience"}
@string{TAPOS           =  "Theory and Practice of Object Systems"}
@string{TSE             =  "Transactions on Software Engineering"}
@string{OOPSM           =  "OOPS Messenger"}

Conferences:

@string{ProcOf = "Proceedings of the "}

@string{ICFP    = ProcOf # "International Conference on Functional Programming"}
@string{GPCE    = ProcOf # "Conference on Generative Programming and Component Engineering"}
@string{GTTSE   = ProcOf # "Summer School Conference on Generative and Transformational Techniques in Software Engineering"}
@string{ESOP    = ProcOf # "European Symposium on Programming"}
@string{MPC     = ProcOf # "Conference on Mathematics of Program Construction"}
@string{IFL-S   = ProcOf # "Symposium on Implementation and Application of Functional Languages"}
@string{IFL-W   = ProcOf # "Workshop on Implementation and Application of Functional Languages"}
@string{FPCA    = ProcOf # "Conference on Functional Programming Languages and Computer Architecture"}
@string{POPL    = ProcOf # "Symposium on Principles of Programming Languages"}
@string{TLCA    = ProcOf # "Conference on Typed Lambda Calculi and Applications"}
@string{LICS    = ProcOf # "Symposium on Logic in Computer Science"}
@string{LMPS    = ProcOf # "Congress of Logic, Methodology, and Philosophy of Science"}
@string{PEPM    = ProcOf # "Workshop on Partial Evaluation and Program Manipulation"}
@string{WGP     = ProcOf # "Workshop on Generic Programming"}
@string{ACMConf = ProcOf # "ACM annual conference"}
@string{MFPS    = ProcOf # "Conference on Mathematical Foundations of Programming Semantics"}
@string{WG2_1   = ProcOf # "IFIP TC2/WG2.1 Working Conference on Generic Programming"}
@string{PLDI    = ProcOf # "Conference on Programming Language Design and Implementation"}
@string{PLILPS  = ProcOf # "Symposium on Programming Languages: Implementations, Logics and Programs"}
@string{ASIAN   = ProcOf # "Asian Computing Science Conference"}
@string{FDPC    = ProcOf # "IFIP Working Conference on Formal Descriptions of Programming Concepts"}
@string{SAIG    = ProcOf # "Workshop on Semantics, Applications, and Implementation of Program Generation"}
@string{Haskell = ProcOf # "Haskell Symposium"}
@string{HaskellWorkshop = ProcOf # "Haskell Workshop"}
@string{PLILP   = ProcOf # "Programming Language Implementation and Logic Programming"}
@string{ECOOP   = ProcOf # "European Conference on Object-Oriented Programming"}
@string{CC      = ProcOf # "Conference on Compiler Construction"}
@string{SLE     = ProcOf # "Conference on Software Language Engineering"}
@string{MFPS    = ProcOf # "Conference on Mathematical Foundations of Programming Semantics"}
@string{WGT     = ProcOf # "Workshop on Generative Technologies"}
@string{LDTA    = ProcOf # "Workshop on Language Descriptions, Tools, and Applications"}
@string{AOSD    = ProcOf # "Conference on Aspect-Oriented Software Development"}
@string{FOOL    = ProcOf # "Workshop on Foundations of Object-Oriented Languages"}
@string{OOPSLA  = ProcOf # "Conference on Object-Oriented Programming, Systems, Languages and Applications"}
@string{APLAS   = ProcOf # "Asian Symposium on Programming Languages and Systems"}
@string{FOSD    = ProcOf # "Workshop on Feature-Oriented Software Development"}
@string{VAMOS   = ProcOf # "Workshop on Variability Modelling of Software-intensive Systems"}
@string{SoftwareReuse
                = ProcOf # "Conference on Software Reuse"}
@string{dspg-dagstuhl
                = ProcOf # "Dagstuhl Seminar on Domain-Specific Program Generation, March 2003"}
@string{ICSE    = ProcOf # "International Conference on Software Engineering"}
@string{Onward  = OOPSLA # " (Onward! track)"}
@string{PPDP    = ProcOf # "Conference on Principles and Practice of Declarative Programming"}
@string{RTA-TLCA = ProcOf # "Joint Conference on Rewriting Techniques and Applications and Typed Lambda Calculi and Applications"}

Publishers:

@string{CambridgeUniversityPress  =  "Cambridge University Press"}
@string{OxfordUniversityPress     =  "Oxford University Press"}
@string{ElsevierNorthHolland      =  "Elsevier North-Holland, Inc."}
@string{ElsevierScience           =  "Elsevier Science Publishers Ltd."}
@String{AddisonWesley             =  "Addison-Wesley Publishing Co."}
@String{Springer                  =  "Springer-Verlag"}
@String{ACM                       =  "ACM"}
@string{IEEE                      =  "IEEE Computer Society"}
@string{Kluwer                    =  "Kluwer Academic Publishers"}
@string{MIT                       =  "Massachusetts Institute of Technology"}
@string{PrenticeHall              =  "Prentice-Hall, Inc."}
@string{AarhusUniversity          =  "University of Aarhus"}
@string{MelbourneUniversity       =  "University of Melbourne"}
@string{GlasgowUniversity         =  "Glasgow University"}
@string{JohnWiley                 =  "John Wiley"}

@string{LNCS                      =  "Springer LNCS "}
@string{ENTCS                     =  "Elsevier ENTCS "}

Schools:

@string{EPFL                      =  "\'Ecole Polytechnique F\'ed\'erale de Lausanne"}

Thesis types:

@string{bscthesis                 =  "Bachelor's thesis"}

Countries:

@string{BE = ", Belgium"}
@string{CH = ", Switzerland"}
@string{EE = ", Estonia"}
@string{DE = ", Germany"}
@string{GB = ", United Kingdom"}
@string{IE = ", Ireland"}
@string{IT = ", Italy"}
@string{JP = ", Japan"}
@string{NL = ", The Netherlands"}
@string{PT = ", Portugal"}
@string{SE = ", Sweden"}
@string{US = ", USA"}
@string{AU = ", Australia"}
@string{PL = ", Poland"}
@string{CA = ", Canada"}

States of the USA:

@string{US-AL = ", Alabama" # US }
@string{US-AK = ", Alaska" # US }
@string{US-AZ = ", Arizona" # US }
@string{US-AR = ", Arkansas" # US }
@string{US-CA = ", California" # US }
@string{US-CO = ", Colorado" # US }
@string{US-CT = ", Connecticut" # US }
@string{US-DE = ", Delaware" # US }
@string{US-DC = ", District of Columbia" # US }
@string{US-FL = ", Florida" # US }
@string{US-GA = ", Georgia" # US }
@string{US-HI = ", Hawaii" # US }
@string{US-ID = ", Idaho" # US }
@string{US-IL = ", Illinois" # US }
@string{US-IN = ", Indiana" # US }
@string{US-IA = ", Iowa" # US }
@string{US-KS = ", Kansas" # US }
@string{US-KY = ", Kentucky" # US }
@string{US-LA = ", Louisiana" # US }
@string{US-ME = ", Maine" # US }
@string{US-MD = ", Maryland" # US }
@string{US-MA = ", Massachusetts" # US }
@string{US-MI = ", Michigan" # US }
@string{US-MN = ", Minnesota" # US }
@string{US-MS = ", Mississippi" # US }
@string{US-MO = ", Missouri" # US }
@string{US-MT = ", Montana" # US }
@string{US-NE = ", Nebraska" # US }
@string{US-NV = ", Nevada" # US }
@string{US-NH = ", New Hampshire" # US }
@string{US-NJ = ", New Jersey" # US }
@string{US-NM = ", New Mexico" # US }
@string{US-NY = ", New York" # US }
@string{US-NC = ", North Carolina" # US }
@string{US-ND = ", North Dakota" # US }
@string{US-OH = ", Ohio" # US }
@string{US-OK = ", Oklahoma" # US }
@string{US-OR = ", Oregon" # US }
@string{US-PA = ", Pennsylvania" # US }
@string{US-RI = ", Rhode Island" # US }
@string{US-SC = ", South Carolina" # US }
@string{US-SD = ", South Dakota" # US }
@string{US-TN = ", Tennessee" # US }
@string{US-TX = ", Texas" # US }
@string{US-UT = ", Utah" # US }
@string{US-VT = ", Vermont" # US }
@string{US-VA = ", Virginia" # US }
@string{US-WA = ", Washington" # US }
@string{US-WV = ", West Virginia" # US }
@string{US-WI = ", Wisconsin" # US }
@string{US-WY = ", Wyoming" # US }

Canadian Provinces:

@string{CA-AB = ", Alberta" # CA }
@string{CA-BC = ", British Columbia" # CA }
@string{CA-MB = ", Manitoba" # CA }
@string{CA-NB = ", New Brunswick" # CA }
@string{CA-NL = ", Newfoundland and Labrador" # CA }
@string{CA-NT = ", Northwest Territories" # CA }
@string{CA-NS = ", Nova Scotia" # CA }
@string{CA-NU = ", Nunavut" # CA }
@string{CA-ON = ", Ontario" # CA }
@string{CA-PE = ", Prince Edward Island" # CA }
@string{CA-QC = ", Quebec" # CA }
@string{CA-SK = ", Saskatchewan" # CA }
@string{CA-YT = ", Yukon" # CA }

Towns:

@string{Amsterdam           = "Amsterdam"               #  NL}
@string{Atlanta             = "Atlanta"                 #  US-GA}
@string{Baltimore           = "Baltimore"               #  US-MD}
@string{Berlin              = "Berlin"                  #  DE}
@string{Boston              = "Boston"                  #  US-MA}
@string{Braga               = "Braga"                   #  PT}
@string{Brussels            = "Brussels"                #  BE}
@string{Cambdrige           = "Cambridge"               #  US-MA}
@string{Charleston          = "Charleston"              #  US-SC}
@string{Deventer            = "Deventer"                #  NL}
@string{Dublin              = "Dublin"                  #  IE}
@string{Edinburgh           = "Edinburgh"               #  GB}
@string{Essex               = "Essex"                   #  GB}
@string{Florence            = "Florence"                #  IT}
@string{Heidelberg          = "Heidelberg"              #  DE}
@string{Hingham             = "Hingham"                 #  US-MA}
@string{Ithaca              = "Ithaca"                  #  US-NY}
@string{LaJolla             = "La Jolla"                #  US-CA}
@string{LasVegas            = "Las Vegas"               #  US-NV}
@string{Lausanne            = "Lausanne"                #  CH}
@string{London              = "London"                  #  GB}
@string{Melbourne           = "Melbourne"               #  AU}
@string{Minneapolis         = "Minneapolis"             #  US-MN}
@string{Montreal            = "Montreal"                #  CA-QC}
@string{Nashville           = "Nashville"               #  US-TN}
@string{NewHaven            = "New Haven"               #  US-CT}
@string{NewOrleans          = "New Orleans"             #  US-LA}

% @string{NewYork             = "New York"                #  US-NY}
@string{NewYork               = ""}

@string{Nijmegen            = "Nijmegen"                #  NL}
@string{Orlando             = "Orlando"                 #  US-FL}
@string{Philadelphia        = "Philadelphia"            #  US-PA}
@string{Portland            = "Portland"                #  US-OR}
@string{Rome                = "Rome"                    #  IT}
@string{SaltLakeCity        = "Salt Lake City"          #  US-UT}
@string{SanAntonio          = "San Antonio"             #  US-TX}
@string{SanDiego            = "San Diego"               #  US-CA}
@string{SanFrancisco        = "San Francisco"           #  US-CA}
@string{Secaucus            = "Secaucus"                #  US-NJ}
@string{SnowBird            = "Snow Bird"               #  US-UT}
@string{StLouis             = "St. Louis"               #  US-MO}
@string{StPetersburgBeach   = "St. Petersburg Beach"    #  US-FL}
@string{Talinn              = "Tallinn"                 #  EE}
@string{Tokyo               = "Tokyo"                   #  JP}
@string{UpperSaddleRiver    = "Upper Saddle River"      #  US-NJ}
@string{Uppsala             = "Uppsala"                 #  SE}
@string{Vancouver           = "Vancouver"               #  CA-BC}
@string{Victoria            = "Victoria"                #  CA-BC}
@string{Warsaw              = "Warsaw"                  #  PL}

Papers:

@inproceedings{abel13copatterns,
  author        = {Abel, Andreas and
                   Pientka, Brigitte and
                   Thibodeau, David and
                   Setzer, Anton},
  title         = {Copatterns: Programming infinite structures by
                   observations},
  booktitle     = POPL,
  year          = 2013,
  pages         = {27--38},
  address       = NewYork,
  publisher     = ACM,
  location      = Rome,
  keywords      = {coinduction, functional programming,
                   introduction vs. elimination, message passing,
                   pattern matching}
}

@inproceedings{cook09understanding,
  author        = {Cook, William R.},
  title         = {On understanding data abstraction, revisited},
  booktitle     = OOPSLA,
  year          = 2009,
  pages         = {557--572},
  address       = NewYork,
  publisher     = ACM,
  location      = Orlando,
  numpages      = 16,
}

@inproceedings{downen2019codata,
  title={Codata in Action},
  author={Downen, Paul and Sullivan, Zachary and Ariola, Zena M and Jones, Simon Peyton},
  booktitle={European Symposium on Programming},
  pages={119--146},
  year={2019},
  organization={Springer}
}

@inproceedings{downen2016sequent,
  title={Sequent calculus as a compiler intermediate language},
  author={Downen, Paul and Maurer, Luke and Ariola, Zena M and Peyton Jones, Simon},
  booktitle={Proceedings of the 21st ACM SIGPLAN International Conference on Functional Programming},
  pages={74--88},
  year={2016}
}

@article{zeilberger2008unity,
  title={On the unity of duality},
  author={Zeilberger, Noam},
  journal={Annals of Pure and Applied Logic},
  volume={153},
  number={1-3},
  pages={66--96},
  year={2008},
  publisher={Elsevier}
}

@inproceedings{10.1145/237721.237791,
  author = {Minamide, Yasuhiko and Morrisett, Greg and Harper, Robert},
  title = {Typed Closure Conversion},
  year = {1996},
  isbn = {0897917693},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/237721.237791},
  doi = {10.1145/237721.237791},
  booktitle = {Proceedings of the 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages = {271–283},
  numpages = {13},
  location = {St. Petersburg Beach, Florida, USA},
  series = {POPL '96}
}

@article{10.1145/2699407,
  author = {Wadler, Philip},
  title = {Propositions as Types},
  year = {2015},
  issue_date = {December 2015},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {58},
  number = {12},
  issn = {0001-0782},
  url = {https://doi.org/10.1145/2699407},
  doi = {10.1145/2699407},
  abstract = {Connecting mathematical logic and computation, it ensures that some aspects of programming are absolute.},
  journal = {Commun. ACM},
  month = {nov},
  pages = {75–84},
  numpages = {10}
}

@article{PierceTurner92,
  author = {Benjamin C. Pierce and David N. Turner},
  title = {Simple Type-Theoretic Foundations for Object-Oriented
                  Programming},
  note = {Summary in \bgroup\em {ACM} {SIGPLAN--SIGACT} {S}ymposium on {P}rinciples of {P}rogramming
                     {L}anguages ({POPL}), Charleston, South Carolina\egroup, 1993},
  journal = {Journal of Functional Programming},
  volume = 4,
  number = 2,
  month = apr,
  pages = {207--247},
  year = {1994},
  plclub = {Yes},
  bcp = {Yes},
  pdf = {http://www.cis.upenn.edu/~bcpierce/papers/oop.pdf},
  ps = {http://www.cis.upenn.edu/~bcpierce/papers/oop.ps},
  conf = {http://www.cis.upenn.edu/~bcpierce/papers/oop-popl.ps},
  keys = {oop}
}

@CONFERENCE{7e4a991f,
  author          = {Roland Lei{\ss}a and Marcel K{\"o}ster and Sebastian Hack},
  title           = {A {G}raph-{B}ased {H}igher-{O}rder {I}ntermediate {R}epresentation},
  booktitle       = {International Symposium on Code Generation and Optimization},
  booktitle_short = {CGO},
  year            = {2015},
  url             = {http://www.cdl.uni-saarland.de/artifacts/cgo2015.php},
  webpdf          = {http://www.cdl.uni-saarland.de/papers/lkh15_cgo.pdf},
  doi             = {10.1109/CGO.2015.7054200},
  award           = {2nd place: Artifact Evaluation for CGO/PPoPP'15},
  acc_rate        = {28.4},
  accepted        = {25},
  submitted       = {88},
}

@misc{
  387458b4,
  author={Gibbons, J.},
  title={{Folding Domain-Specific Languages: Deep and Shallow Embeddings}},
  year={2013},
  month={October},
  howpublished={\url{https://www.cs.ox.ac.uk/jeremy.gibbons/publications/embedding.pdf}},
}
